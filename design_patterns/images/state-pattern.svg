<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="500" xmlns="http://www.w3.org/2000/svg">
    <!-- Definitions -->
    <defs>
        <!-- Gradients -->
        <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" stop-color="#0f172a" />
            <stop offset="100%" stop-color="#1e293b" />
        </linearGradient>
        <linearGradient id="interfaceGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#4f46e5" />
            <stop offset="100%" stop-color="#3730a3" />
        </linearGradient>
        <linearGradient id="concreteGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#10b981" />
            <stop offset="100%" stop-color="#059669" />
        </linearGradient>
        <linearGradient id="boxGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#2d3748" />
            <stop offset="100%" stop-color="#1e293b" />
        </linearGradient>
        <linearGradient id="diagramGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#334155" />
            <stop offset="100%" stop-color="#1e293b" />
        </linearGradient>
        <linearGradient id="stateAGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#10b981" />
            <stop offset="100%" stop-color="#059669" />
        </linearGradient>
        <linearGradient id="stateBGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#10b981" />
            <stop offset="100%" stop-color="#059669" />
        </linearGradient>
        <linearGradient id="noteGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" stop-color="#8b5cf6" />
            <stop offset="100%" stop-color="#7e22ce" />
        </linearGradient>
        
        <!-- Drop shadows -->
        <filter id="dropShadow" x="-20%" y="-20%" width="140%" height="140%">
            <feDropShadow dx="2" dy="2" stdDeviation="3" flood-opacity="0.3" />
        </filter>
        
        <!-- Glow effect -->
        <filter id="glow" x="-50%" y="-50%" width="200%" height="200%">
            <feGaussianBlur stdDeviation="2" result="blur" />
            <feComposite in="SourceGraphic" in2="blur" operator="over" />
        </filter>
        
        <!-- Arrow markers -->
        <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="#94a3b8"/>
        </marker>
        <marker id="relationship-arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="#10b981"/>
        </marker>
        <marker id="inheritance-arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
            <polygon points="10 0, 0 3.5, 10 7" fill="#94a3b8"/>
        </marker>
    </defs>

    <!-- Background -->
    <rect width="800" height="500" fill="url(#bgGradient)" rx="15" ry="15"/>
    
    <!-- Title -->
    <text x="400" y="25" font-family="'Segoe UI', Arial, sans-serif" font-size="24" font-weight="600" text-anchor="middle" fill="white">State Design Pattern</text>

    <!-- State Interface -->
    <rect x="300" y="50" width="200" height="120" fill="url(#boxGradient)" stroke="url(#interfaceGradient)" stroke-width="2" rx="8" ry="8" filter="url(#dropShadow)"/>
    <text x="400" y="80" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#ffffff" text-anchor="middle" font-weight="500">«interface»</text>
    <text x="400" y="100" font-family="'Segoe UI', Arial, sans-serif" font-size="18" fill="#ffffff" text-anchor="middle" font-weight="600">State</text>
    <line x1="300" y1="110" x2="500" y2="110" stroke="url(#interfaceGradient)" stroke-width="2"/>
    
    <!-- Methods in State Interface -->
    <text x="320" y="135" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#60a5fa">+ handle1(): void</text>
    <text x="320" y="155" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#60a5fa">+ handle2(): void</text>

    <!-- Context Class -->
    <rect x="50" y="200" width="200" height="140" fill="url(#boxGradient)" stroke="url(#concreteGradient)" stroke-width="2" rx="8" ry="8" filter="url(#dropShadow)"/>
    <text x="150" y="230" font-family="'Segoe UI', Arial, sans-serif" font-size="18" fill="#ffffff" text-anchor="middle" font-weight="600">Context</text>
    <line x1="50" y1="240" x2="250" y2="240" stroke="url(#concreteGradient)" stroke-width="2"/>
    
    <!-- Fields and Methods in Context -->
    <text x="70" y="265" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">- state: State</text>
    <line x1="70" y1="275" x2="230" y2="275" stroke="#10b981" stroke-width="1" stroke-dasharray="2"/>
    <text x="70" y="295" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">+ setState(state: State)</text>
    <text x="70" y="315" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">+ request1(): void</text>
    <text x="70" y="335" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">+ request2(): void</text>

    <!-- ConcreteStateA -->
    <rect x="300" y="200" width="200" height="100" fill="url(#boxGradient)" stroke="url(#concreteGradient)" stroke-width="2" rx="8" ry="8" filter="url(#dropShadow)"/>
    <text x="400" y="230" font-family="'Segoe UI', Arial, sans-serif" font-size="18" fill="#ffffff" text-anchor="middle" font-weight="600">ConcreteStateA</text>
    <line x1="300" y1="240" x2="500" y2="240" stroke="url(#concreteGradient)" stroke-width="2"/>
    
    <!-- Methods in ConcreteStateA -->
    <text x="320" y="265" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">+ handle1(): void</text>
    <text x="320" y="285" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">+ handle2(): void</text>

    <!-- ConcreteStateB -->
    <rect x="550" y="200" width="200" height="100" fill="url(#boxGradient)" stroke="url(#concreteGradient)" stroke-width="2" rx="8" ry="8" filter="url(#dropShadow)"/>
    <text x="650" y="230" font-family="'Segoe UI', Arial, sans-serif" font-size="18" fill="#ffffff" text-anchor="middle" font-weight="600">ConcreteStateB</text>
    <line x1="550" y1="240" x2="750" y2="240" stroke="url(#concreteGradient)" stroke-width="2"/>
    
    <!-- Methods in ConcreteStateB -->
    <text x="570" y="265" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">+ handle1(): void</text>
    <text x="570" y="285" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#10b981">+ handle2(): void</text>

    <!-- Implementation arrows from Concrete States to State interface -->
    <line x1="400" y1="200" x2="400" y2="170" stroke="#94a3b8" stroke-width="2" marker-start="url(#inheritance-arrowhead)" filter="url(#glow)"/>
    <line x1="650" y1="200" x2="450" y2="120" stroke="#94a3b8" stroke-width="2" marker-start="url(#inheritance-arrowhead)" filter="url(#glow)"/>
    
    <!-- Relationship between Context and State -->
    <line x1="180" y1="200" x2="350" y2="125" stroke="#10b981" stroke-width="2" marker-end="url(#relationship-arrowhead)" filter="url(#glow)"/>
    <rect x="220" y="130" width="50" height="22" rx="11" fill="#334155" fill-opacity="0.8" />
    <text x="245" y="145" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#10b981" text-anchor="middle" font-weight="500">uses</text>

    <!-- State Transition Diagram -->
    <rect x="100" y="380" width="600" height="90" fill="url(#diagramGradient)" stroke="url(#interfaceGradient)" stroke-width="2" rx="8" ry="8" opacity="0.9" filter="url(#dropShadow)"/>
    
    <!-- State Circles -->
    <circle cx="200" cy="425" r="30" fill="url(#stateAGradient)" opacity="0.9" stroke="#ffffff" stroke-width="2" filter="url(#dropShadow)"/>
    <text x="200" y="430" font-family="'Segoe UI', Arial, sans-serif" font-size="13" fill="#ffffff" text-anchor="middle" font-weight="600">State A</text>
    
    <circle cx="600" cy="425" r="30" fill="url(#stateBGradient)" opacity="0.9" stroke="#ffffff" stroke-width="2" filter="url(#dropShadow)"/>
    <text x="600" y="430" font-family="'Segoe UI', Arial, sans-serif" font-size="13" fill="#ffffff" text-anchor="middle" font-weight="600">State B</text>
    
    <!-- Transition Arrows -->
    <line x1="230" y1="415" x2="570" y2="415" stroke="#ffffff" stroke-width="2" marker-end="url(#arrowhead)" filter="url(#glow)"/>
    <rect x="375" y="390" width="70" height="22" rx="11" fill="#334155" fill-opacity="0.8" />
    <text x="410" y="405" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" text-anchor="middle" font-weight="500">event1()</text>
    
    <line x1="570" y1="435" x2="230" y2="435" stroke="#ffffff" stroke-width="2" marker-end="url(#arrowhead)" filter="url(#glow)"/>
    <rect x="375" y="440" width="70" height="22" rx="11" fill="#334155" fill-opacity="0.8" />
    <text x="410" y="455" font-family="'Segoe UI', Arial, sans-serif" font-size="12" fill="#ffffff" text-anchor="middle" font-weight="500">event2()</text>

    <!-- Notes -->
    <rect x="100" y="20" width="150" height="60" fill="url(#boxGradient)" stroke="url(#noteGradient)" stroke-width="1" rx="8" ry="8" stroke-dasharray="5,5" filter="url(#dropShadow)"/>
    <text x="175" y="50" font-family="'Segoe UI', Arial, sans-serif" font-size="13" fill="#ffffff" text-anchor="middle" font-style="italic" font-weight="500">
        States encapsulate
    </text>
    <text x="175" y="65" font-family="'Segoe UI', Arial, sans-serif" font-size="13" fill="#ffffff" text-anchor="middle" font-style="italic" font-weight="500">
        behavior for each state
    </text>

    <!-- Main explanation -->
    <rect x="80" y="330" width="640" height="30" fill="url(#boxGradient)" stroke="#60a5fa" stroke-width="1" rx="8" ry="8" opacity="0.9" filter="url(#dropShadow)"/>
    <text x="400" y="350" font-family="'Segoe UI', Arial, sans-serif" font-size="14" fill="#ffffff" text-anchor="middle" font-style="italic" font-weight="500">
        The State pattern allows an object to alter its behavior when its internal state changes
    </text>
</svg> 